# Generated by Django 5.1.6 on 2025-03-05 14:26

import django.core.validators
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField()),
                ('response_link', models.URLField(blank=True, null=True)),
                ('is_visible', models.BooleanField(default=False)),
                ('responded_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=5000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('thumbails', models.ImageField(blank=True, null=True, upload_to='app_thumbnails')),
                ('category', models.CharField(blank=True, choices=[('DAW', 'DAWs'), ('Plugins', 'Plugins'), ('Sample', 'Sample'), ('library', 'Library & Expansions')], max_length=5000, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='app_videos/')),
                ('video_size', models.FloatField(default=0)),
                ('youtube_link', models.URLField(blank=True, max_length=5000, null=True)),
                ('youtube_duration', models.DurationField(blank=True, null=True)),
                ('youtube_comments_count', models.PositiveIntegerField(default=0)),
                ('youtube_views_count', models.PositiveIntegerField(default=0)),
                ('youtube_thumbnails', models.JSONField(blank=True, null=True)),
                ('app_file', models.FileField(blank=True, null=True, upload_to='app_files/')),
                ('google_drive_link', models.URLField(blank=True, max_length=5000, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(blank=True, default='USD', max_length=3, null=True)),
                ('banned', models.BooleanField(default=False)),
                ('send_notification', models.BooleanField(default=False)),
                ('read', models.BooleanField(default=False)),
                ('premium', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppDownloadHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=1000, null=True)),
                ('downloader_ip', models.GenericIPAddressField(null=True)),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('download_count', models.PositiveIntegerField(default=1)),
                ('file_size', models.FloatField(null=True)),
                ('download_speed', models.FloatField(null=True)),
                ('completion_status', models.BooleanField(default=True)),
                ('download_format', models.CharField(max_length=100, null=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('download_type', models.CharField(choices=[('video', 'Video'), ('app', 'Application'), ('other', 'Other')], max_length=20)),
                ('user_agent', models.TextField(null=True)),
                ('device_type', models.CharField(choices=[('mobile', 'Mobile'), ('tablet', 'Tablet'), ('desktop', 'Desktop'), ('pc', 'PC'), ('smart_tv', 'Smart TV'), ('console', 'Gaming Console'), ('wearable', 'Wearable Device'), ('iot', 'IoT Device'), ('unknown', 'Unknown Device')], max_length=200, null=True)),
                ('browser', models.CharField(max_length=1000, null=True)),
                ('os', models.CharField(max_length=1000, null=True)),
                ('country', models.CharField(max_length=1000, null=True)),
                ('city', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('comment', models.TextField(blank=True, null=True)),
                ('feedback_date', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='App name can only contain letters, numbers, spaces, hyphens, and underscores.', regex='^[a-zA-Z0-9\\s\\-_]+$')])),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Enter phone number with country code (e.g., +1234567890)', max_length=128, region=None)),
                ('whatsapp_number', models.CharField(blank=True, help_text='Enter a phone number or a WhatsApp link (e.g., +1234567890 or https://wa.me/1234567890)', max_length=255, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AppReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('neutral', 'Neutral')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppViewHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewer_ip', models.GenericIPAddressField()),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('view_count', models.PositiveIntegerField(default=1)),
                ('user_agent', models.TextField(null=True)),
                ('session_id', models.CharField(max_length=1000, null=True)),
                ('device_type', models.CharField(choices=[('mobile', 'Mobile'), ('tablet', 'Tablet'), ('desktop', 'Desktop'), ('pc', 'PC'), ('smart_tv', 'Smart TV'), ('console', 'Gaming Console'), ('wearable', 'Wearable Device'), ('iot', 'IoT Device'), ('unknown', 'Unknown Device')], max_length=2000, null=True)),
                ('browser', models.CharField(max_length=1000, null=True)),
                ('os', models.CharField(max_length=1000, null=True)),
                ('location', models.CharField(max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DownloadToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_code', models.CharField(max_length=50, unique=True)),
                ('download_count', models.IntegerField(default=0)),
                ('max_downloads', models.IntegerField(default=2)),
                ('expiry_time', models.DateTimeField()),
                ('user_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending First Download'), ('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('LIMIT_REACHED', 'Download Limit Reached'), ('REVOKED', 'Manually Revoked')], default='PENDING', max_length=20)),
                ('last_download_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('last_download_timestamp', models.DateTimeField(blank=True, null=True)),
                ('last_download_user_agent', models.TextField(blank=True, null=True)),
                ('file_version', models.CharField(blank=True, max_length=50, null=True)),
                ('file_checksum', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DriveFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.CharField(max_length=100)),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField(default=0)),
                ('mime_type', models.CharField(max_length=100)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('checksum', models.CharField(blank=True, max_length=64, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_downloads_per_purchase', models.IntegerField(default=2)),
                ('download_expiry_hours', models.IntegerField(default=24)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DrivePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_id', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('granting_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('last_access_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('last_access_timestamp', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='Brief description of your feedback', max_length=200, validators=[django.core.validators.MinLengthValidator(5)])),
                ('feedback_type', models.CharField(choices=[('BUG', 'Bug Report'), ('FEATURE', 'Feature Request'), ('IMPROVEMENT', 'Improvement Suggestion'), ('GENERAL', 'General Feedback'), ('OTHER', 'Other')], default='GENERAL', max_length=20)),
                ('description', models.TextField(help_text='Detailed description of your feedback', validators=[django.core.validators.MinLengthValidator(10)])),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed'), ('REJECTED', 'Rejected')], default='NEW', max_length=20)),
                ('attachment', models.FileField(blank=True, help_text='Upload any relevant files (screenshots, documents, etc.)', null=True, upload_to='feedback_attachments/%Y/%m/')),
                ('email', models.EmailField(help_text="We'll use this to follow up with you", max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('browser_info', models.JSONField(blank=True, help_text='Browser and system information', null=True)),
                ('url', models.URLField(blank=True, help_text='URL where the issue occurred', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=False, help_text='Submit feedback anonymously')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_internal', models.BooleanField(default=False, help_text='Internal note visible only to staff')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='LinkClick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', models.CharField(choices=[('youtube', 'YouTube'), ('drive', 'Google Drive')], max_length=10)),
                ('clicked_at', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('success', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Payment Pending'), ('COMPLETED', 'Payment Completed'), ('FAILED', 'Payment Failed'), ('REFUNDED', 'Payment Refunded')], default='PENDING', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_provider_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('payment_initiated_at', models.DateTimeField(auto_now_add=True)),
                ('payment_completed_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SavedApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=500)),
                ('results_count', models.PositiveIntegerField()),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('sort_by', models.CharField(blank=True, max_length=50, null=True)),
                ('successful', models.BooleanField(default=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
